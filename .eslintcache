[{"D:\\GitHub\\todoapp\\my-app\\src\\components\\Main\\Main.tsx":"1","D:\\GitHub\\todoapp\\my-app\\src\\components\\ToDoCard\\ToDoCard.tsx":"2","D:\\GitHub\\todoapp\\my-app\\src\\reportWebVitals.ts":"3","D:\\GitHub\\todoapp\\my-app\\src\\index.tsx":"4","D:\\GitHub\\todoapp\\my-app\\src\\components\\Footer\\Footer.tsx":"5","D:\\GitHub\\todoapp\\my-app\\src\\App.tsx":"6","D:\\GitHub\\todoapp\\my-app\\src\\components\\Cards\\Cards.tsx":"7","D:\\GitHub\\todoapp\\my-app\\src\\components\\Cards\\DoneCards.tsx":"8","D:\\GitHub\\todoapp\\my-app\\src\\components\\Nav\\Header.tsx":"9"},{"size":4026,"mtime":1606614483573,"results":"10","hashOfConfig":"11"},{"size":2125,"mtime":1606503179252,"results":"12","hashOfConfig":"11"},{"size":425,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":555,"mtime":1606148299074,"results":"14","hashOfConfig":"11"},{"size":1779,"mtime":1606504184628,"results":"15","hashOfConfig":"11"},{"size":326,"mtime":1606149515446,"results":"16","hashOfConfig":"11"},{"size":806,"mtime":1606503516609,"results":"17","hashOfConfig":"11"},{"size":550,"mtime":1606502330083,"results":"18","hashOfConfig":"11"},{"size":385,"mtime":1606507070669,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2ec0pd",{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\GitHub\\todoapp\\my-app\\src\\components\\Main\\Main.tsx",[],"D:\\GitHub\\todoapp\\my-app\\src\\components\\ToDoCard\\ToDoCard.tsx",["43","44","45"],"import React, { Component } from \"react\";\r\n\r\nimport \"./ToDoCard.css\";\r\n\r\nexport class ToDoCard extends Component<any, {}> {\r\n  state = {\r\n    index: 0,\r\n  };\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.handleClickBtn1 = this.handleClickBtn1.bind(this);\r\n    this.handleClickBtn2 = this.handleClickBtn2.bind(this); \r\n    this.handleClickBtn3 = this.handleClickBtn3.bind(this);\r\n\r\n    this.state = {\r\n      index: this.props.index,\r\n    };\r\n  }\r\n  async handleClickBtn1() {\r\n    await this.props.updateData(this.state.index);\r\n  }\r\n  async handleClickBtn2() {\r\n    await this.props.updateData2(this.state.index);\r\n  }\r\n  async handleClickBtn3() {\r\n    await this.props.updateData3(this.state.index);\r\n  }\r\n\r\n  render() {\r\n    if (this.props.btn === \"mark as completed\") {\r\n      return (\r\n        <div className=\"col  s12 m7\">\r\n          <div className=\"card horizontal\">\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                <p>{this.props.text}</p>\r\n              </div>\r\n              <div className=\"card-action\">\r\n                <a\r\n                  className=\"blue-text text-darken-2\"\r\n                  onClick={this.handleClickBtn1}\r\n                >\r\n                  {this.props.btn}\r\n                </a>\r\n                <a className=\"brn__delete\" onClick={this.handleClickBtn2}>\r\n                  {this.props.btn2}\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"col  s12 m7\">\r\n          <div className=\"card horizontal\">\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                <p>{this.props.text}</p>\r\n              </div>\r\n              <div className=\"card-action\">\r\n                <a\r\n                  className=\"green-text text-lighten-2\"\r\n                  onClick={this.handleClickBtn3}\r\n                >\r\n                  {this.props.btn}\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","D:\\GitHub\\todoapp\\my-app\\src\\reportWebVitals.ts",[],["46","47"],"D:\\GitHub\\todoapp\\my-app\\src\\index.tsx",[],["48","49"],"D:\\GitHub\\todoapp\\my-app\\src\\components\\Footer\\Footer.tsx",["50","51","52","53","54"],"import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"page-footer #b39ddb deep-purple lighten-3\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col l6 s12\">\r\n              <h5 className=\"white-text\">ToDoApp</h5>\r\n              <p className=\"grey-text text-lighten-4\">ToDo App is simple and awesome app to organize your tasks with very easy to use interface. ToDo can help you to make list of your tasks and also you can set Reminder with specific tasks</p>\r\n            </div>\r\n            <div className=\"col l4 offset-l2 s12\">\r\n            <h5 className=\"white-text\">Links</h5>\r\n              <ul>\r\n                <li><a className=\"grey-text text-lighten-3\" href=\"https://github.com/georgyshkliaryk/todoapp\" target=\"_blank\">Github</a></li>\r\n                <li><a className=\"grey-text text-lighten-3\" href=\"https://console.firebase.google.com/u/0/project/todoapp-b1de3/overview\" target=\"_blank\">Firebase</a></li>\r\n              </ul>\r\n              <h5 className=\"white-text\">App built with</h5>\r\n              <ul>\r\n                <li><a className=\"grey-text text-lighten-3\" href=\"https://reactjs.org/\" target=\"_blank\">React</a></li>\r\n                <li><a className=\"grey-text text-lighten-3\" href=\"https://www.typescriptlang.org/\" target=\"_blank\">TypeScript</a></li>\r\n                <li><a className=\"grey-text text-lighten-3\" href=\"https://materializecss.com/\" target=\"_blank\">Materialize.css</a></li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"footer-copyright\">\r\n          <div className=\"container\">\r\n          Â© 2020 todoapp\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","D:\\GitHub\\todoapp\\my-app\\src\\App.tsx",[],"D:\\GitHub\\todoapp\\my-app\\src\\components\\Cards\\Cards.tsx",["55"],"D:\\GitHub\\todoapp\\my-app\\src\\components\\Cards\\DoneCards.tsx",["56"],"import React from \"react\";\r\nimport { ToDoCard } from \"../ToDoCard/ToDoCard\";\r\n\r\n\r\nexport class DoneCards extends React.Component<any, {}> {\r\n  constructor(props: any) {\r\n    super(props);\r\n}\r\n\r\nrender() { \r\n    let cards = []; \r\n    if (this.props.text === undefined) {\r\n      cards = [];\r\n    } else {      \r\n      for (let i = 0; i < this.props.text.length; i++) { \r\n        cards.push(<ToDoCard key={i} text={this.props.text[i]} index={i} updateData3={this.props.updateData3} btn={this.props.btn}/>);\r\n      }\r\n    }\r\n\r\n    return cards;\r\n  }\r\n}\r\n","D:\\GitHub\\todoapp\\my-app\\src\\components\\Nav\\Header.tsx",[],{"ruleId":"57","severity":1,"message":"58","line":39,"column":17,"nodeType":"59","endLine":42,"endColumn":18},{"ruleId":"57","severity":1,"message":"58","line":45,"column":17,"nodeType":"59","endLine":45,"endColumn":75},{"ruleId":"57","severity":1,"message":"58","line":62,"column":17,"nodeType":"59","endLine":65,"endColumn":18},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"60","replacedBy":"64"},{"ruleId":"62","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":15,"column":111,"nodeType":"68","endLine":15,"endColumn":126},{"ruleId":"66","severity":1,"message":"67","line":16,"column":139,"nodeType":"68","endLine":16,"endColumn":154},{"ruleId":"66","severity":1,"message":"67","line":20,"column":89,"nodeType":"68","endLine":20,"endColumn":104},{"ruleId":"66","severity":1,"message":"67","line":21,"column":100,"nodeType":"68","endLine":21,"endColumn":115},{"ruleId":"66","severity":1,"message":"67","line":22,"column":96,"nodeType":"68","endLine":22,"endColumn":111},{"ruleId":"69","severity":1,"message":"70","line":8,"column":3,"nodeType":"71","messageId":"72","endLine":10,"endColumn":4},{"ruleId":"69","severity":1,"message":"70","line":6,"column":3,"nodeType":"71","messageId":"72","endLine":8,"endColumn":2},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["73"],"no-negated-in-lhs",["74"],["73"],["74"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]